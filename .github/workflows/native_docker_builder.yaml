name: Build  and publish multi-arch docker images using native  hardware
on:
  push:
    branches:
      - main

env:
  DOCKER_USER: adysh97
  PPC64LE_VM_IP: ${{ secrets.PPC64LE_VM_IP }}
  VM_IP: ${{ secrets.VM_IP }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
  IMG: adysh97/native_built_image
  ARCH: linux/ppc64le,linux/amd64

jobs:
  push_to_registry:
    name: Build & Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: configure ssh
        run: |
          ssh-keygen -t rsa -q -f "$HOME/.ssh/id_rsa" -N ""
          printenv  SSH_PRIVATE_KEY > ~/.ssh/id_rsa
          ssh-keyscan -H $VM_IP >~/.ssh/known_hosts
          eval $(ssh-agent) 
          ssh-add
          echo SSH_AUTH_SOCK=$SSH_AUTH_SOCK  >> $GITHUB_ENV 
          echo SSH_AGENT_PID=$SSH_AGENT_PID >> $GITHUB_ENV 
          ssh -T $PPC64LE_VM_IP arch

      - name: add native builder
        run: |
          docker context create linux-ppc64le-context  --docker "host=ssh://$PPC64LE_VM_IP"
          docker buildx create --name amd64-ppc64le-builder  --platform linux/ppc64le linux-ppc64le-context
          docker buildx use amd64-ppc64le-builder
          docker buildx create --append --name amd64-ppc64le-builder --platform linux/amd64 default 
          docker buildx inspect amd64-ppc64le-builder

      - name: Build multi-arch docker image
        run: |
          docker buildx ls
          docker buildx build   --push --platform linux/ppc64le,linux/amd64 -t $IMG .

      - name: list and inspect
        if: github.event_name == 'push'
        run: |
          docker manifest inspect $IMG | grep arch -i

      - name: clean ppc64le native docker node
        run: |
          docker buildx prune -a -f
          docker context use linux-ppc64le-context 
          docker rm -f $(docker ps -aq)
          docker rmi -f $(docker images -q)
          docker system prune  -a -f --volumes 
          eval $(ssh-agent -k)
